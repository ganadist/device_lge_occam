From 18a65532777628198ffd24e268247a0d18d86e98 Mon Sep 17 00:00:00 2001
From: Young-Ho Cha <ganadist@gmail.com>
Date: Fri, 16 Oct 2015 10:57:14 +0900
Subject: [PATCH 2/3] policy: launch camera by multiple key press

Inspired from Nexus 5X,6P and Samsung Galaxy series feature

Bug: https://code.google.com/p/android/issues/detail?id=190248
Change-Id: I33579c34efe0360a92ab6098d7030257fb4b3397
Signed-off-by: Young-Ho Cha <ganadist@gmail.com>
---
 core/res/res/values/config.xml                     |  3 +
 .../android/server/policy/PhoneWindowManager.java  | 64 ++++++++++++++++------
 2 files changed, 50 insertions(+), 17 deletions(-)

diff --git a/core/res/res/values/config.xml b/core/res/res/values/config.xml
index ae8cae8..8978c35 100755
--- a/core/res/res/values/config.xml
+++ b/core/res/res/values/config.xml
@@ -732,6 +732,7 @@
             0 - Nothing
             1 - Toggle theater mode setting
             2 - Brightness boost
+            3 - Launch Camera
     -->
     <integer name="config_doublePressOnPowerBehavior">0</integer>
 
@@ -739,6 +740,7 @@
             0 - Nothing
             1 - Toggle theater mode setting
             2 - Brightness boost
+            3 - Launch Camera
     -->
     <integer name="config_triplePressOnPowerBehavior">0</integer>
 
@@ -923,6 +925,7 @@
     <!-- Control the behavior when the user double-taps the home button.
             0 - Nothing
             1 - Recent apps view in SystemUI
+            2 - Launch Camera
          This needs to match the constants in
          policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
     -->
diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index 92dbe00..0fbb9ba 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -175,6 +175,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     static final int MULTI_PRESS_POWER_NOTHING = 0;
     static final int MULTI_PRESS_POWER_THEATER_MODE = 1;
     static final int MULTI_PRESS_POWER_BRIGHTNESS_BOOST = 2;
+    static final int MULTI_PRESS_POWER_LAUNCH_CAMERA = 3;
 
     // These need to match the documentation/constant in
     // core/res/res/values/config.xml
@@ -184,6 +185,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
     static final int DOUBLE_TAP_HOME_NOTHING = 0;
     static final int DOUBLE_TAP_HOME_RECENT_SYSTEM_UI = 1;
+    static final int DOUBLE_TAP_HOME_LAUNCH_CAMERA = 2;
 
     static final int SHORT_PRESS_SLEEP_GO_TO_SLEEP = 0;
     static final int SHORT_PRESS_SLEEP_GO_TO_SLEEP_AND_GO_HOME = 1;
@@ -1077,6 +1079,16 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 }
                 mPowerManager.boostScreenBrightness(eventTime);
                 break;
+            case MULTI_PRESS_POWER_LAUNCH_CAMERA:
+                Slog.i(TAG, "Launching camera by power button.");
+                if (!interactive) {
+                    wakeUpFromPowerKey(eventTime);
+                }
+
+                if (mCameraLensCoverState != CAMERA_LENS_COVERED) {
+                    launchCamera();
+                }
+                break;
         }
     }
 
@@ -1285,10 +1297,19 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
-    private void handleDoubleTapOnHome() {
-        if (mDoubleTapOnHomeBehavior == DOUBLE_TAP_HOME_RECENT_SYSTEM_UI) {
-            mHomeConsumed = true;
-            toggleRecentApps();
+    private void handleDoubleTapOnHome(long eventTime) {
+        switch(mDoubleTapOnHomeBehavior) {
+            case DOUBLE_TAP_HOME_RECENT_SYSTEM_UI:
+                mHomeConsumed = true;
+                toggleRecentApps();
+                break;
+            case DOUBLE_TAP_HOME_LAUNCH_CAMERA:
+                mHomeConsumed = true;
+                if (mCameraLensCoverState != CAMERA_LENS_COVERED) {
+                    wakeUp(eventTime, mAllowTheaterModeWakeFromKey, "android.policy:KEY");
+                    launchCamera();
+                }
+                break;
         }
     }
 
@@ -1559,7 +1580,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         mDoubleTapOnHomeBehavior = mContext.getResources().getInteger(
                 com.android.internal.R.integer.config_doubleTapOnHomeBehavior);
         if (mDoubleTapOnHomeBehavior < DOUBLE_TAP_HOME_NOTHING ||
-                mDoubleTapOnHomeBehavior > DOUBLE_TAP_HOME_RECENT_SYSTEM_UI) {
+                mDoubleTapOnHomeBehavior > DOUBLE_TAP_HOME_LAUNCH_CAMERA) {
             mDoubleTapOnHomeBehavior = DOUBLE_TAP_HOME_NOTHING;
         }
     }
@@ -2717,8 +2738,13 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 if (type == WindowManager.LayoutParams.TYPE_KEYGUARD_SCRIM
                         || type == WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG
                         || (attrs.privateFlags & PRIVATE_FLAG_KEYGUARD) != 0) {
-                    // the "app" is keyguard, so give it the key
-                    return 0;
+                    // If DoubleTapOnHomeBehavior is camera launching, do not
+                    // give key to keyguard, and perform handleDoubleTapOnHome.
+                    if (!(mDoubleTapOnHomeBehavior == DOUBLE_TAP_HOME_LAUNCH_CAMERA &&
+                            repeatCount == 0 && mHomeDoubleTapPending)) {
+                        // the "app" is keyguard, so give it the key
+                        return 0;
+                    }
                 }
                 final int typeCount = WINDOW_TYPES_WHERE_HOME_DOESNT_WORK.length;
                 for (int i=0; i<typeCount; i++) {
@@ -2735,7 +2761,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 if (mHomeDoubleTapPending) {
                     mHomeDoubleTapPending = false;
                     mHandler.removeCallbacks(mHomeDoubleTapTimeoutRunnable);
-                    handleDoubleTapOnHome();
+                    handleDoubleTapOnHome(event.getEventTime());
                 } else if (mLongPressOnHomeBehavior == LONG_PRESS_HOME_RECENT_SYSTEM_UI
                         || mDoubleTapOnHomeBehavior == DOUBLE_TAP_HOME_RECENT_SYSTEM_UI) {
                     preloadRecentApps();
@@ -4720,6 +4746,18 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
+    private void launchCamera() {
+        Intent intent;
+        final boolean keyguardActive = mKeyguardDelegate == null ?
+                false : mKeyguardDelegate.isShowing();
+        if (keyguardActive) {
+            intent = new Intent(MediaStore.INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE);
+        } else {
+            intent = new Intent(MediaStore.INTENT_ACTION_STILL_IMAGE_CAMERA);
+        }
+        startActivityAsUser(intent, UserHandle.CURRENT_OR_SELF);
+    }
+
     @Override
     public void notifyCameraLensCoverSwitchChanged(long whenNanos, boolean lensCovered) {
         int lensCoverState = lensCovered ? CAMERA_LENS_COVERED : CAMERA_LENS_UNCOVERED;
@@ -4728,17 +4766,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
         if (mCameraLensCoverState == CAMERA_LENS_COVERED &&
                 lensCoverState == CAMERA_LENS_UNCOVERED) {
-            Intent intent;
-            final boolean keyguardActive = mKeyguardDelegate == null ? false :
-                    mKeyguardDelegate.isShowing();
-            if (keyguardActive) {
-                intent = new Intent(MediaStore.INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE);
-            } else {
-                intent = new Intent(MediaStore.INTENT_ACTION_STILL_IMAGE_CAMERA);
-            }
             wakeUp(whenNanos / 1000000, mAllowTheaterModeWakeFromCameraLens,
                     "android.policy:CAMERA_COVER");
-            startActivityAsUser(intent, UserHandle.CURRENT_OR_SELF);
+            launchCamera();
         }
         mCameraLensCoverState = lensCoverState;
     }
-- 
2.6.1


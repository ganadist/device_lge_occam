From 380d9c6771e8378e69051c9de483acf4c0ec9975 Mon Sep 17 00:00:00 2001
From: Young-Ho Cha <ganadist@gmail.com>
Date: Wed, 21 Oct 2015 22:10:56 +0900
Subject: [PATCH 2/2] Settings: add camera behavior

This patch will be deprecated after MDB08I release

Signed-off-by: Young-Ho Cha <ganadist@gmail.com>
---
 res/values/strings.xml                             |  5 +++
 res/xml/accessibility_settings.xml                 |  6 +++
 .../accessibility/AccessibilitySettings.java       | 44 ++++++++++++++++++++++
 3 files changed, 55 insertions(+)

diff --git a/res/values/strings.xml b/res/values/strings.xml
index d5b04c7..80bebb7 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -6959,4 +6959,9 @@
     <string name="write_settings_on">Yes</string>
     <!-- Summary of app not allowed to write system settings [CHAR LIMIT=45] -->
     <string name="write_settings_off">No</string>
+
+    <string name="camera_gesture_title">Double twist for camera</string>
+    <string name="camera_gesture_desc">Open the camera app by twisting your wrist twice</string>
+    <string name="camera_double_tap_power_gesture_title">Press power button twice for camera</string>
+    <string name="camera_double_tap_power_gesture_desc">Quickly open camera without unlocking your screen</string>
 </resources>
diff --git a/res/xml/accessibility_settings.xml b/res/xml/accessibility_settings.xml
index cd9d471..80ea417 100644
--- a/res/xml/accessibility_settings.xml
+++ b/res/xml/accessibility_settings.xml
@@ -54,6 +54,12 @@
                 android:persistent="false"/>
 
         <SwitchPreference
+                android:key="toggle_power_button_launch_camera_preference"
+                android:title="@string/camera_double_tap_power_gesture_title"
+                android:summary="@string/camera_double_tap_power_gesture_desc"
+                android:persistent="false"/>
+
+        <SwitchPreference
                 android:key="toggle_lock_screen_rotation_preference"
                 android:title="@string/accelerometer_title"
                 android:persistent="false"/>
diff --git a/src/com/android/settings/accessibility/AccessibilitySettings.java b/src/com/android/settings/accessibility/AccessibilitySettings.java
index 96577a0..3e34a9a 100644
--- a/src/com/android/settings/accessibility/AccessibilitySettings.java
+++ b/src/com/android/settings/accessibility/AccessibilitySettings.java
@@ -84,6 +84,8 @@ public class AccessibilitySettings extends SettingsPreferenceFragment implements
             "toggle_inversion_preference";
     private static final String TOGGLE_POWER_BUTTON_ENDS_CALL_PREFERENCE =
             "toggle_power_button_ends_call_preference";
+    private static final String TOGGLE_POWER_BUTTON_LAUNCH_CAMERA_PREFERENCE =
+            "toggle_power_button_launch_camera_preference";
     private static final String TOGGLE_LOCK_SCREEN_ROTATION_PREFERENCE =
             "toggle_lock_screen_rotation_preference";
     private static final String TOGGLE_SPEAK_PASSWORD_PREFERENCE =
@@ -99,6 +101,8 @@ public class AccessibilitySettings extends SettingsPreferenceFragment implements
     private static final String DISPLAY_DALTONIZER_PREFERENCE_SCREEN =
             "daltonizer_preference_screen";
 
+    private static final int DOUBLE_PRESS_POWER_BEHAVIOR_LAUNCH_CAMERA = 3;
+
     // Extras passed to sub-fragments.
     static final String EXTRA_PREFERENCE_KEY = "preference_key";
     static final String EXTRA_CHECKED = "checked";
@@ -184,6 +188,7 @@ public class AccessibilitySettings extends SettingsPreferenceFragment implements
     private SwitchPreference mToggleLargeTextPreference;
     private SwitchPreference mToggleHighTextContrastPreference;
     private SwitchPreference mTogglePowerButtonEndsCallPreference;
+    private SwitchPreference mTogglePowerButtonLaunchCameraPreference;
     private SwitchPreference mToggleLockScreenRotationPreference;
     private SwitchPreference mToggleSpeakPasswordPreference;
     private ListPreference mSelectLongPressTimeoutPreference;
@@ -277,6 +282,9 @@ public class AccessibilitySettings extends SettingsPreferenceFragment implements
         } else if (mTogglePowerButtonEndsCallPreference == preference) {
             handleTogglePowerButtonEndsCallPreferenceClick();
             return true;
+        } else if (mTogglePowerButtonLaunchCameraPreference == preference) {
+            handleTogglePowerButtonLaunchCameraPreferenceClick();
+            return true;
         } else if (mToggleLockScreenRotationPreference == preference) {
             handleLockScreenRotationPreferenceClick();
             return true;
@@ -316,6 +324,14 @@ public class AccessibilitySettings extends SettingsPreferenceFragment implements
                         : Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_SCREEN_OFF));
     }
 
+    private void handleTogglePowerButtonLaunchCameraPreferenceClick() {
+        Settings.System.putInt(getContentResolver(),
+                Settings.System.CAMERA_ACCESSIBILITY_BEHAVIOR,
+                (mTogglePowerButtonLaunchCameraPreference.isChecked() ?
+                 Settings.System.CAMERA_ACCESSIBILITY_BEHAVIOR_POWER_DOUBLE_TAP:
+                 Settings.System.CAMERA_ACCESSIBILITY_BEHAVIOR_NOTHING));
+    }
+
     private void handleLockScreenRotationPreferenceClick() {
         RotationPolicy.setRotationLockForAccessibility(getActivity(),
                 !mToggleLockScreenRotationPreference.isChecked());
@@ -375,6 +391,16 @@ public class AccessibilitySettings extends SettingsPreferenceFragment implements
             mSystemsCategory.removePreference(mTogglePowerButtonEndsCallPreference);
         }
 
+        // Power button launch camera.
+        mTogglePowerButtonLaunchCameraPreference =
+                (SwitchPreference) findPreference(TOGGLE_POWER_BUTTON_LAUNCH_CAMERA_PREFERENCE);
+        final int doublePressOnPowerBehavior = getActivity().getResources().getInteger(
+                com.android.internal.R.integer.config_doublePressOnPowerBehavior);
+        if (!KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_POWER)
+                || doublePressOnPowerBehavior != DOUBLE_PRESS_POWER_BEHAVIOR_LAUNCH_CAMERA) {
+            mSystemsCategory.removePreference(mTogglePowerButtonLaunchCameraPreference);
+        }
+ 
         // Lock screen rotation.
         mToggleLockScreenRotationPreference =
                 (SwitchPreference) findPreference(TOGGLE_LOCK_SCREEN_ROTATION_PREFERENCE);
@@ -559,6 +585,24 @@ public class AccessibilitySettings extends SettingsPreferenceFragment implements
                     (incallPowerBehavior == Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP);
             mTogglePowerButtonEndsCallPreference.setChecked(powerButtonEndsCall);
         }
+        if (KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_POWER)) {
+            final int cameraAcessibilityBehavior = Settings.System.getInt(getContentResolver(),
+                    Settings.System.CAMERA_ACCESSIBILITY_BEHAVIOR,
+                    Settings.System.CAMERA_ACCESSIBILITY_BEHAVIOR_FACTORY);
+            boolean powerButtonLaunchCamera = false;
+            if (cameraAcessibilityBehavior == Settings.System.CAMERA_ACCESSIBILITY_BEHAVIOR_FACTORY) {
+                final int doublePressOnPowerBehavior = getActivity().getResources().getInteger(
+                        com.android.internal.R.integer.config_doublePressOnPowerBehavior);
+                if (doublePressOnPowerBehavior == DOUBLE_PRESS_POWER_BEHAVIOR_LAUNCH_CAMERA) {
+                    powerButtonLaunchCamera = true;
+                }
+            } else if (cameraAcessibilityBehavior ==
+                    Settings.System.CAMERA_ACCESSIBILITY_BEHAVIOR_POWER_DOUBLE_TAP) {
+                powerButtonLaunchCamera = true;
+            }
+
+            mTogglePowerButtonLaunchCameraPreference.setChecked(powerButtonLaunchCamera);
+        }
 
         // Auto-rotate screen
         updateLockScreenRotationCheckbox();
-- 
2.6.1

